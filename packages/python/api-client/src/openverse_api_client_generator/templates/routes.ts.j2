/**
 * This file is generated from a template. Do not edit it by hand!
 *
 * @see {@link https://docs.openverse.org/packages/js/api-client/index.html#development-and-implementation-details}
 */

{# It's much easier to disable this rule than to filter the imported models based on whether they are used and the value in doing that filtering is minimal #}
/* eslint-disable @typescript-eslint/no-unused-vars */
import type {
  {%- for model in models.values() %}
  {{ model.name }},
  {%- endfor %}
} from "./models"
/* eslint-enable @typescript-eslint/no-unused-vars */

export type Routes = {
  {%- for route in routes %}
  {%- if route.description %}
  {{ route.description | ts_comment(2) }}
  {%- endif %}
  "{{ route.endpoint }}": {
    request: {% if route.path_params or route.query_params or route.request_body %}{
      {%- for param in route.path_params.values() %}
      {%- if param.description %}
      {{ param.description | ts_comment(6) }}
      {%- endif %}
      {{ param.ts_property_string }}
      {%- endfor %}
      {%- if route.query_params %}
      params{{ "" if route.has_required_query_params else "?" }}: {
        {%- for param in route.query_params.values() %}
        {%- if param.description %}
        {{ param.description | ts_comment(8) }}
        {%- endif %}
        {{ param.ts_property_string }}
        {%- endfor %}
      }
      {%- endif %}
      {%- if route.request_body %}
      body: {{ route.request_body | ts_type_string }}
      {%- endif %}
    }{% else %}unknown{% endif %}
    response: {{ route.response | ts_type_string }}
  }
{% endfor -%}
}

export const RoutesMeta = {
  {%- for route in routes %}
  "{{ route.endpoint }}": {
    contentType: "{{ route.content_type }}",
    pathParams: [{% for p in route.path_params %}"{{ p }}"{% endfor %}],
    jsonResponse: {{ "true" if route.json_response else "false" }},
  },
{% endfor -%}
} as const
