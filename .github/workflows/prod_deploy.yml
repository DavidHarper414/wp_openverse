name: Deploy ECS

on:
  workflow_dispatch:
    inputs:
      stack:
        type: choice
        description: The layer of the stack to deploy
        default: 'frontend'
        options:
          # - api TODO
          - frontend
      image-tag:
        description: The image tag to deploy to prod
        type: string
        required: true

jobs:
  # See also `deploy-frontend` in `ci_cd.yml`.
  deploy-frontend:
    name: Deploy production frontend
    runs-on: ubuntu-latest
    if: inputs.stack == 'frontend'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy to staging
        uses: ./.github/actions/production-nuxt-deploy
        with:
          tag: ${{ inputs.image-tag }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          slack-webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          gh-slack-username-map: ${{ secrets.GH_SLACK_USERNAME_MAP }}

  # See also `deploy-api` in `ci_cd.yml`.
  deploy-api:
    name: Deploy production API
    runs-on: ubuntu-latest
    if: inputs.stack == 'api' && false # Remove `&& false` when `production-api-deploy` is ready.

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy to staging
        uses: ./.github/actions/production-api-deploy # TODO
        with:
          tag: ${{ inputs.image-tag }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          slack-webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          gh-slack-username-map: ${{ secrets.GH_SLACK_USERNAME_MAP }}
